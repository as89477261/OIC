<?php

require_once('CReservationModel.php');
//require_once('CshBooking.php');
require_once('MCar.php');
require_once('MDriver.php');
require_once('MAccount.php');
require_once('MRole.php');
require_once('MOrganize.php');
require_once('MGroupPolicy.php');

class MBooking extends CReservationModel
{

	var $minute = array(
		array('value' => '00', 'title' => '00'),
		array('value' => '15', 'title' => '15'),
		array('value' => '30', 'title' => '30'),
		array('value' => '45', 'title' => '45')
	);
	var $hours = array(
		array('value' => '00', 'title' => '00'),
		array('value' => '01', 'title' => '01'),
		array('value' => '02', 'title' => '02'),
		array('value' => '03', 'title' => '03'),
		array('value' => '04', 'title' => '04'),
		array('value' => '05', 'title' => '05'),
		array('value' => '06', 'title' => '06'),
		array('value' => '07', 'title' => '07'),
		array('value' => '08', 'title' => '08'),
		array('value' => '09', 'title' => '09'),
		array('value' => '10', 'title' => '10'),
		array('value' => '11', 'title' => '11'),
		array('value' => '12', 'title' => '12'),
		array('value' => '13', 'title' => '13'),
		array('value' => '14', 'title' => '14'),
		array('value' => '15', 'title' => '15'),
		array('value' => '16', 'title' => '16'),
		array('value' => '17', 'title' => '17'),
		array('value' => '18', 'title' => '18'),
		array('value' => '19', 'title' => '19'),
		array('value' => '20', 'title' => '20'),
		array('value' => '21', 'title' => '21'),
		array('value' => '22', 'title' => '22'),
		array('value' => '23', 'title' => '23'),
		array('value' => '24', 'title' => '24')
	);
	var $province = array(
		array('value' => 'กระบี่', 'title' => 'กระบี่'),
		array('value' => 'กรุงเทพ', 'title' => 'กรุงเทพ'),
		array('value' => 'กาญจนบุรี', 'title' => 'กาญจนบุรี'),
		array('value' => 'กาฬสินธุ์', 'title' => 'กาฬสินธุ์'),
		array('value' => 'กำแพงเพชร', 'title' => 'กำแพงเพชร'),
		array('value' => 'ขอนแก่น', 'title' => 'ขอนแก่น'),
		array('value' => 'จันทบุรี', 'title' => 'จันทบุรี'),
		array('value' => 'ฉะเชิงเทรา', 'title' => 'ฉะเชิงเทรา'),
		array('value' => 'ชลบุรี', 'title' => 'ชลบุรี'),
		array('value' => 'ชัยนาท', 'title' => 'ชัยนาท'),
		array('value' => 'ชัยภูมิ', 'title' => 'ชัยภูมิ'),
		array('value' => 'ชุมพร', 'title' => 'ชุมพร'),
		array('value' => 'เชียงราย', 'title' => 'เชียงราย'),
		array('value' => 'เชียงใหม่', 'title' => 'เชียงใหม่'),
		array('value' => 'ตรัง', 'title' => 'ตรัง'),
		array('value' => 'ตราด', 'title' => 'ตราด'),
		array('value' => 'ตาก', 'title' => 'ตาก'),
		array('value' => 'นครนายก', 'title' => 'นครนายก'),
		array('value' => 'นครปฐม', 'title' => 'นครปฐม'),
		array('value' => 'นครพนม', 'title' => 'นครพนม'),
		array('value' => 'นครราชสีมา', 'title' => 'นครราชสีมา'),
		array('value' => 'นครศรีธรรมราช', 'title' => 'นครศรีธรรมราช'),
		array('value' => 'นครสวรรค์', 'title' => 'นครสวรรค์'),
		array('value' => 'นนทบุรี', 'title' => 'นนทบุรี'),
		array('value' => 'นราธิวาส', 'title' => 'นราธิวาส'),
		array('value' => 'น่าน', 'title' => 'น่าน'),
		array('value' => 'บุรีรัมย์', 'title' => 'น่าน'),
		array('value' => 'ปทุมธานี', 'title' => 'ปทุมธานี'),
		array('value' => 'ประจวบคีรีขันธ์', 'title' => 'ประจวบคีรีขันธ์'),
		array('value' => 'ปราจีนบุรี', 'title' => 'ปราจีนบุรี'),
		array('value' => 'ปัตตานี', 'title' => 'ปัตตานี'),
		array('value' => 'พระนครศรีอยุธยา', 'title' => 'พระนครศรีอยุธยา'),
		array('value' => 'พะเยา', 'title' => 'พะเยา'),
		array('value' => 'พังงา', 'title' => 'พังงา'),
		array('value' => 'พัทลุง', 'title' => 'พัทลุง'),
		array('value' => 'พิจิตร', 'title' => 'พิจิตร'),
		array('value' => 'พิษณุโลก', 'title' => 'พิษณุโลก'),
		array('value' => 'เพชรบุรี', 'title' => 'เพชรบุรี'),
		array('value' => 'เพชรบูรณ์', 'title' => 'เพชรบูรณ์'),
		array('value' => 'แพร่', 'title' => 'แพร่'),
		array('value' => 'ภูเก็ต', 'title' => 'ภูเก็ต'),
		array('value' => 'มหาสารคาม', 'title' => 'มหาสารคาม'),
		array('value' => 'มุกดาหาร', 'title' => 'มุกดาหาร'),
		array('value' => 'ยะลา', 'title' => 'ยะลา'),
		array('value' => 'ยโสธร', 'title' => 'ยโสธร'),
		array('value' => 'ระนอง', 'title' => 'ระนอง'),
		array('value' => 'ระยอง', 'title' => 'ระยอง'),
		array('value' => 'ราชบุรี', 'title' => 'ราชบุรี'),
		array('value' => 'ร้อยเอ็ด', 'title' => 'ร้อยเอ็ด'),
		array('value' => 'ลพบุรี', 'title' => 'ลพบุรี'),
		array('value' => 'ลำปาง', 'title' => 'ลำปาง'),
		array('value' => 'ลำพูน', 'title' => 'ลำพูน'),
		array('value' => 'เลย', 'title' => 'เลย'),
		array('value' => 'ศรีสะเกษ', 'title' => 'ศรีสะเกษ'),
		array('value' => 'สกลนคร', 'title' => 'สกลนคร'),
		array('value' => 'สงขลา', 'title' => 'สงขลา'),
		array('value' => 'สตูล', 'title' => 'สตูล'),
		array('value' => 'สมุทรปราการ', 'title' => 'สมุทรปราการ'),
		array('value' => 'สมุทรสงคราม', 'title' => 'สมุทรสงคราม'),
		array('value' => 'สมุทรสาคร', 'title' => 'สมุทรสาคร'),
		array('value' => 'สระบุรี', 'title' => 'สระบุรี'),
		array('value' => 'สระแก้ว', 'title' => 'สระแก้ว'),
		array('value' => 'สิงห์บุรี', 'title' => 'สิงห์บุรี'),
		array('value' => 'สุพรรณบุรี', 'title' => 'สุพรรณบุรี'),
		array('value' => 'สุราษฎร์ธานี', 'title' => 'สุราษฎร์ธานี'),
		array('value' => 'สุรินทร์', 'title' => 'สุรินทร์'),
		array('value' => 'สุโขทัย', 'title' => 'สุโขทัย'),
		array('value' => 'หนองคาย', 'title' => 'หนองคาย'),
		array('value' => 'หนองบัวลำภู', 'title' => 'หนองบัวลำภู'),
		array('value' => 'อำนาจเจริญ', 'title' => 'อำนาจเจริญ'),
		array('value' => 'อุดรธานี', 'title' => 'อุดรธานี'),
		array('value' => 'อุตรดิตถ์', 'title' => 'อุตรดิตถ์'),
		array('value' => 'อุทัยธานี', 'title' => 'อุทัยธานี'),
		array('value' => 'อุบลราชธานี', 'title' => 'อุบลราชธานี'),
		array('value' => 'อ่างทอง', 'title' => 'อ่างทอง'),
		array('value' => 'แม่ฮ่องสอน', 'title' => 'แม่ฮ่องสอน')
	);
	var $field = array(
		'account_id',
		'position_id',
		'deparment_id',
		'phone',
		'type',
		'goto',
		'address',
		'province',
		'zipcode',
		'objective',
		'person',
		'go_date',
		'go_hour',
		'go_minute',
		'back_date',
		'back_hour',
		'back_minute',
		'chief_id',
		'status',
		'mile_start',
		'mile_stop',
		'comment_detail',
		'car_id',
		'driver_id',
		'approve_id'
	);
	var $primary_key = 'booking_id';
	var $table_name = 'tbl_booking';
	var $model_name = 'booking';
	var $order_by = array('booking_id' => ORDERBY_ASC);
	var $string_column_list = array('status', 'comment_detail', 'deparment_id', 'account_id', 'position_id', 'goto', 'address', 'province', 'objective', 'chief_id', 'go_date', 'back_date');

//	var $join_models = array(MCar => array('car_id'), MDriver => array('driver_id'));

	function searchBooking($criteria, $where = array())
	{
		if ($criteria['status'])
			$where['status'] = $criteria['status'];

		$where['go_date >='] = $this->convertFormate($criteria['from_date']);
		$where['go_date <='] = $this->convertFormate($criteria['to_date']);

//		$ds = $this->getDataStore();
//		$ds->debug_sql = true;

		$booking = $this->findAll($where);

		$m_car = new MCar($this->parent);
		$car = $m_car->findAll();
		$booking = $this->mergeBookingInfo($booking, $car, 'car_id');

		$m_driver = new MDriver($this->parent);
		$driver = $m_driver->findAll();
		$booking = $this->mergeBookingInfo($booking, $driver, 'driver_id');

		$m_account = new MAccount($this->parent);
		$account = $m_account->findAll();
		$booking = $this->mergeBookingInfo($booking, $account, 'f_acc_id', 'account_id');
		$booking = $this->mergeBookingInfo($booking, $account, 'f_acc_id', 'approve_id');

		$booking = $this->meargeStatus($booking);
		return $booking;
	}

	function mergeBookingInfo($booking, $info, $keyword, $diffKey = '')
	{
		$info = makeAssocArray($info, $keyword);
		$key = ($diffKey == '' ? $keyword : $diffKey);
		foreach($booking as &$velue)
		{
			if(!is_array($info[$velue[$key]]))
			{
				continue;
			}
			$velue[$key] = $info[$velue[$key]];
		}
		return $booking;
	}

	function meargeStatus($booking)
	{
		$status = $this->getBookingStatusList();
		$status = makeAssocArray($status, 'Value');

		foreach($booking as &$value)
		{
			$value['status_desc'] = $status[$value['status']]['Text'];
		}

		return $booking;
	}

	function getBookingStatusList()
	{
		if (isset($this->booking_status_list))
			$result = $this->booking_status_list;
		else
		{
			$result = $this->getListFromPreferences('BookingStatus');
			$this->booking_status_list = $result;
		}
		return $result;
	}

	function getDefaultData($bookingId = '')
	{

		$m_account = new MAccount($this->parent);
		$m_position = new MRole($this->parent);
		$m_deparment = new MOrganize($this->parent);
		
		$bookingList = array();
		$bookingList['booking_id'] = $bookingId;

		$phone = '';
		$provinceSelected = '';
		$goHourSelected = '';
		$goMinuteSelected = '';
		$backHourSelected = '';
		$backMinuteSelected = '';

		if ($bookingId != '')
		{
			$booking = $this->findAll(array('booking_id' => $bookingId));
			$booking = array_shift($booking);

			$accountId = $booking['account_id'];
			$positionId = $booking['position_id'];
			$deparmentId = $booking['deparment_id'];
			$phone = $booking['phone'];
			$provinceSelected = $booking;
			$goHourSelected = $booking['go_hour'];
			$goMinuteSelected = $booking['go_minute'];
			$backHourSelected = $booking['back_hour'];
			$backMinuteSelected = $booking['back_minute'];

			$bookingList['go_date'] = date('Y-m-d', strtotime($booking['go_date']));
			$bookingList['back_date'] = date('Y-m-d', strtotime($booking['back_date']));
			$bookingList['type'] = $booking['type'];
			$bookingList['goto'] = $booking['goto'];
			$bookingList['address'] = $booking['address'];
			$bookingList['zipcode'] = $booking['zipcode'];
			$bookingList['objective'] = $booking['objective'];
			$bookingList['person'] = $booking['person'];
			$bookingList['chief_id'] = $booking['chief_id'];
			$bookingList['status'] = $booking['status'];
			$bookingList['mile_start'] = $booking['mile_start'];
			$bookingList['mile_stop'] = $booking['mile_stop'];
			$bookingList['comment_detail'] = $booking['comment_detail'];
			$bookingList['status'] = $booking['status'];
			$bookingList['province'] = $booking['province'];
			$bookingList['go_hour'] = $booking['go_hour'];
			$bookingList['go_minute'] = $booking['go_minute'];
			$bookingList['back_hour'] = $booking['back_hour'];
			$bookingList['back_minute'] = $booking['back_minute'];

			$chief = $m_account->findById($booking['chief_id']);
			$approve = $m_account->findById($booking['approve_id']);

			$bookingList['chief_id'] = $booking['chief_id'];
			$bookingList['chief_name'] = $chief['f_name'] . ' ' . $chief['f_last_name'];
			$bookingList['approve_name'] = $approve['f_name'] . ' ' . $approve['f_last_name'];

			$m_car = new MCar($this->parent);
			$car = $m_car->findAll();
			$bookingList['car'] = $m_car->findById($booking['car_id']);
			$bookingList['car_list'] = getList($car, 'car_id', 'car_license', $booking['car_id']);

			$m_driver = new MDriver($this->parent);
			$driver = $m_driver->findAll();
			$bookingList['driver'] = $m_driver->findById($booking['driver_id']);
			$bookingList['driver_list'] = getList($driver, 'driver_id', 'first_name', $booking['driver_id']);
		}
		else
		{
			$accountId = $_SESSION['accID'];
			$positionId = $_SESSION['roleID'];
			$deparmentId = '';

			$bookingList['go_date'] = date('Y-m-d');
			$bookingList['back_date'] = date('Y-m-d');
		}

		

		$account = $m_account->findAll(array('f_acc_id' => $accountId));
		$account = array_shift($account);

		$position = $m_position->findAll(array('f_role_id' => $positionId));
		$position = array_shift($position);

		if ($deparmentId != '')
		{
			$deparment = $m_deparment->findAll(array('f_org_id' => $deparmentId));
		}
		else
		{
			$deparment = $m_deparment->findAll(array('f_org_id' => $position['f_org_id']));
			$deparment = array_shift($deparment);
			$deparmentId = $position['f_org_id'];
		}

		$bookingList['account_id'] = $accountId;
		$bookingList['account_name'] = $account['f_name'] . ' ' . $account['f_last_name'];
		$bookingList['position_id'] = $positionId;
		$bookingList['position_name'] = $position['f_role_name'];
		$bookingList['deparment_id'] = $deparmentId;
		$bookingList['deparment_name'] = $deparment['f_org_name'];

		if ($phone != '')
		{
			$bookingList['phone'] = $phone;
		}
		else
		{
			$bookingList['phone'] = $account['f_tel'];
		}

		$bookingList['province_list'] = getList($this->province, 'value', 'title', $provinceSelected);
		$bookingList['go_hours_list'] = getList($this->hours, 'value', 'title', $goHourSelected);
		$bookingList['go_minute_list'] = getList($this->minute, 'value', 'title', $goMinuteSelected);
		$bookingList['back_hours_list'] = getList($this->hours, 'value', 'title', $backHourSelected);
		$bookingList['back_minute_list'] = getList($this->minute, 'value', 'title', $backMinuteSelected);

		return $bookingList;
	}

	function insertBooking($booking)
	{

		$ds = $this->getDataStore();
		$ds->debug_sql = true;

		$booking = copyArrayValue($booking, $this->field);

		$booking['status'] = 'WAIT';
		$booking = $this->arrayConvertEncoding('UTF-8', 'TIS-620', $booking);
		$result = $this->insert($booking);

		return $result;
	}

	function editBooking($booking)
	{
		$book_id = $booking['booking_id'];
		$book = $booking['booking'];

		$book['go_date'] = $this->convertFormate($book['go_date']);
		$book['back_date'] = $this->convertFormate($book['back_date']);

		$book = copyArrayValue($book, $this->field);

//		$ds = $this->getDataStore();
//		$ds->debug_sql = true;
		$book = $this->arrayConvertEncoding('UTF-8', 'TIS-620', $book);print_r($book);
		return $this->updateById($book_id, $book);
	}

	function convertFormate($date)
	{
		$date = date('Ymd', strtotime($date));
		return $date;
	}

	function checkDelete(&$arg_output, $column)
	{
		$booking = $this->findAll();
		$bookingId = extractArrayValue($booking, $column);
		foreach ($arg_output as $key => $carValue)
		{
			$dalete = '1';
			if (in_array($carValue[$column], $bookingId))
			{
				$dalete = '0';
			}
			$arg_output[$key]['delete'] = $dalete;
		}
	}

	function checkPermission($positionId)
	{
		$dPosition = new MRole($this->parent);
		$position = $dPosition->findById($positionId);
		$GPId =$position['f_gp_id'];

		$dGroupPolicy = new MGroupPolicy($this->parent);
		$groupPolicy = $dGroupPolicy->findById($GPId);

		return $groupPolicy;
	}
}

?>