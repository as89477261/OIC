/*
 * New Project 1
 * Copyright(c) 2006, Jack Slocum.
 * 
 * This code is licensed under BSD license. Use it as you wish, 
 * but keep this copyright intact.
 */


Ext.namespace('Ext.ux.wam');Ext.onReady(function(){Ext.getBody().createChild({tag:'style',type:'text/css',html:'.x-props-grid .x-item-disabled .x-grid3-cell-inner {color: gray !important; font-style: italic !important}'});})
Ext.ux.wam.PropertyRecord=Ext.data.Record.create([{name:'id',type:'string'},{name:'Name',type:'string'},{name:'text',type:'string'},'Value',{name:'disabled',type:'boolean'},'Editor','Group','renderer']);Ext.ux.wam.PropertyColumnModel=function(store){this.store=store;Ext.ux.wam.PropertyColumnModel.superclass.constructor.call(this,[{header:Ext.grid.PropertyColumnModel.prototype.nameText,width:50,sortable:true,dataIndex:'Name',id:'id'},{header:Ext.grid.PropertyColumnModel.prototype.valueText,width:50,resizable:false,dataIndex:'Value',id:'id'},{header:'group',hidden:true,dataIndex:'Group',id:'Group'}]);this.bselect=Ext.DomHelper.append(document.body,{tag:'select',cls:'x-grid-editor x-hide-display',children:[{tag:'option',value:'true',html:'true'},{tag:'option',value:'false',html:'false'}]});var bfield=new Ext.form.Field({el:this.bselect,bselect:this.bselect,autoShow:true,getValue:function(){return this.bselect.value=='true';}});this.editors={'date':new Ext.grid.GridEditor(new Ext.form.DateField({selectOnFocus:true})),'string':new Ext.grid.GridEditor(new Ext.form.TextField({selectOnFocus:true})),'number':new Ext.grid.GridEditor(new Ext.form.NumberField({selectOnFocus:true,style:'text-align:left;'})),'boolean':new Ext.grid.GridEditor(bfield)};this.renderCellDelegate=this.renderCell.createDelegate(this);this.renderPropDelegate=this.renderProp.createDelegate(this);};Ext.extend(Ext.ux.wam.PropertyColumnModel,Ext.grid.ColumnModel,{renderDate:function(dateVal){return dateVal.dateFormat(Ext.grid.PropertyColumnModel.prototype.dateFormat);},renderBool:function(bVal){return bVal?'true':'false';},isCellEditable:function(colIndex,rowIndex){return(colIndex==1)&&(this.store.getAt(rowIndex).data['disabled']!==true);},getRenderer:function(col){return col==1?this.renderCellDelegate:this.renderPropDelegate;},renderProp:function(value,metadata,record){return record.data['text']||record.data['name'];},renderCell:function(value,metadata,record){var rv=value;if(record.data['renderer']==""){if(value instanceof Date){rv=this.renderDate(value);}
else
if(typeof value=='boolean'){rv=this.renderBool(value);}
rv=Ext.util.Format.htmlEncode(rv);}
else{rv=record.data['renderer'].call(this,value);}
return rv;},getCellEditor:function(colIndex,rowIndex){var p=this.store.getAt(rowIndex);var val=p.data['value'];if(p.data['Editor']!==""){return p.data['Editor'];}
if(val instanceof Date){return this.editors['date'];}else if(typeof val=='number'){return this.editors['number'];}else if(typeof val=='boolean'){return this.editors['boolean'];}else{return this.editors['string'];}}});Ext.ux.wam.PropertyGrid=Ext.extend(Ext.grid.EditorGridPanel,{enableColumnMove:false,stripeRows:false,trackMouseOver:false,clicksToEdit:1,enableHdMenu:false,initComponent:function(){this.lastEditRow=null;var cm=new Ext.ux.wam.PropertyColumnModel(this.store);this.store.sort('Name','ASC');this.addEvents('beforepropertychange','propertychange');this.cm=cm;Ext.ux.wam.PropertyGrid.superclass.initComponent.call(this);this.selModel.on('beforecellselect',function(sm,rowIndex,colIndex){if(this.store.getAt(rowIndex).data['disabled']==true){return false;}
if(colIndex===0){this.startEditing.defer(200,this,[rowIndex,1]);return false;}},this);},onRender:function(){Ext.ux.wam.PropertyGrid.superclass.onRender.apply(this,arguments);this.getGridEl().addClass('x-props-grid');}});